import unittest
from main import AntivirusFrontend  # Assuming this module exists
from sequence import Process  # Assuming this module exists
from MalwareDetector import MalwareDetector  # Assuming this module exists
import os

class TestMalwareDetector(unittest.TestCase):

    def setUp(self):

        self.malware_detector = MalwareDetector()

    def test_add_signature(self):
        self.malware_detector.add_signature("malicious_signature")


    def test_is_infected(self):
        self.malware_detector.add_signature("malicious_signature")
        self.assertTrue(self.malware_detector.is_infected("This contains a malicious_signature"))
        self.assertFalse(self.malware_detector.is_infected("This is a clean file"))

class TestProcess(unittest.TestCase):

    def setUp(self):
        # This will run before each test
        self.process = Process()

    def test_set_file_path(self):
        self.process.setFilePath("/some/path")
        self.assertEqual(self.process.file_path, "/some/path")

    def test_read_signatures(self):
        # Assuming read_signatures returns a MalwareDetector instance
        signature_files = ["test_signature_file.txt"]
        with open(signature_files[0], 'w') as f:
            f.write("malicious_signature\n")

        malware_detector = self.process.read_signatures(signature_files)
        self.assertIsInstance(malware_detector, MalwareDetector)

        os.remove(signature_files[0])

    def test_scan_directory(self):
        # Assuming scan_directory returns a list of malware files
        signature_files = ["test_signature_file.txt"]
        with open(signature_files[0], 'w') as f:
            f.write("malicious_signature\n")

        malware_detector = self.process.read_signatures(signature_files)
        test_dir = "test_dir"
        os.mkdir(test_dir)
        with open(os.path.join(test_dir, "malware.txt"), 'w') as f:
            f.write("malicious_signature")

        malware_files = self.process.scan_directory(test_dir, malware_detector)
        self.assertIsInstance(malware_files, list)
        self.assertTrue(malware_files)

        os.remove(os.path.join(test_dir, "malware.txt"))
        os.rmdir(test_dir)
        os.remove(signature_files[0])

class TestAntivirusFrontend(unittest.TestCase):

    def setUp(self):
        self.frontend = AntivirusFrontend()

    def test_initialization(self):
        self.assertIsNotNone(self.frontend.root)
        self.assertIsNotNone(self.frontend.malware_detector)
        self.assertIsNotNone(self.frontend.lists)
        self.assertIsNotNone(self.frontend.processor)


if __name__ == "__main__":
    unittest.main()