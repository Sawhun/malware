import tkinter as tk
from tkinter import filedialog
from MalwareDetector import MalwareDetector
from lists import Lists
from sequence import Process

class AntivirusFrontend:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("Malware Detection")
        self.root.geometry("1300x700")
        self.root.configure(bg="#000000")  # Black background

        # Header Label
        self.header_label = tk.Label(self.root, text="Malware Detection Application",
                                     font=("Arial", 40, "bold"), fg="#00FF00", bg="#000000")
        self.header_label.pack(pady=20)  # Centered with padding

        # Main Frame for Buttons and Labels
        self.main_frame = tk.Frame(self.root, bg="#000000")
        self.main_frame.pack(expand=True)

        # Left Label
        self.left_label = tk.Label(self.main_frame, text="Select folder location:",
                                   font=("Arial", 18), fg="#00FF00", bg="#000000")
        self.left_label.pack(pady=10)

        # Enter Location Button
        self.enter_location_button = tk.Button(self.main_frame,
                                               text="Choose Location", font=("Arial", 14),
                                               bg="#00FF00", fg="#000000", command=self.search_location)
        self.enter_location_button.pack(pady=5)

        # Delete Malware Button
        self.delete_malware_button = tk.Button(self.main_frame, text="Delete Malware", font=("Arial", 12),
                                               fg="#00FF00", bg="#000000", activebackground="#00FF00",
                                               activeforeground="#000000", padx=10, pady=5,
                                               borderwidth=0, command=self.delete_malware)
        self.delete_malware_button.pack(pady=20)

        # Search Result Frame
        self.result_frame = tk.Frame(self.root, width=1200, height=400, bg="#000000")
        self.result_frame.pack(pady=20)

        self.result_frame.pack_propagate(False)

        # Creating instances of backend classes
        self.malware_detector = MalwareDetector()
        self.lists = Lists()
        self.processor = Process()

    def search_location(self):
        search_path = filedialog.askdirectory(title="Select Directory")
        if search_path:
            self.process_file(search_path)

    def process_file(self, search_path):
        self.processor.setFilePath(search_path)
        self.processor.main()
        self.print_search_location()

    def print_search_location(self):
        search_results = self.processor.searchResult
        for widget in self.result_frame.winfo_children():
            widget.destroy()

        if search_results:
            header_label = tk.Label(self.result_frame,
                                text="Malware detected", font=("Arial", 15, "bold"), fg="#FF0000", bg="#000000")
            header_label.pack(anchor='center')
            for lo in search_results:
                file_label = tk.Label(self.result_frame,
                                 text=lo, font=("Arial", 11, "bold"), fg="#FF0000", bg="#000000")
                file_label.pack(anchor='w')
        else:
            header_label = tk.Label(self.result_frame,
                                text="No malware detected. You are safe.", font=("Arial", 16, "bold"),
                                    fg="#00FF00", bg="#000000")
            header_label.pack(anchor='center')

    def delete_malware(self):
        search_results = self.processor.filePathtoDelete
        for widget in self.result_frame.winfo_children():
            widget.destroy()

        if search_results:
            num = 0
            for path in search_results:
                self.processor.delete_file(path)
                num += 1
            if num > 0:
                result_label = tk.Label(self.root, text="Malware Deleted successfully",
                                        font=("Arial", 15, "bold"), fg="#00FF00", bg="#000000")
            else:
                result_label = tk.Label(self.root, text="Malware not Deleted",
                                        font=("Arial", 15, "bold"), fg="#FF0000", bg="#000000")
        else:
            result_label = tk.Label(self.root, text="No Malware selected",
                                    font=("Arial", 15, "bold"), fg="#00FF00", bg="#000000")

        result_label.place(relx=0.5, rely=0.95, anchor="center")

    def run(self):
        self.root.mainloop()

if __name__ == "__main__":
    frontend = AntivirusFrontend()
    frontend.run()
